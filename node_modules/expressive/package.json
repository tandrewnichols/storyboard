{
  "name": "expressive",
  "version": "0.0.1",
  "description": "Adds environment-specific hooks to express apps",
  "main": "./lib/expressive.js",
  "scripts": {
    "test": "grunt",
    "publish": "if echo $USERNAME | grep -cq 'anichols'; then publisher run; fi"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mantacode/expressive.git"
  },
  "keywords": [
    "express",
    "app",
    "environment",
    "dev",
    "prod",
    "test",
    "routes"
  ],
  "author": {
    "name": "Andrew Nichols",
    "email": "anichols@manta.com",
    "url": "www.tandrewnichols.me"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mantacode/expressive/issues"
  },
  "homepage": "https://github.com/mantacode/expressive",
  "devDependencies": {
    "coffee-script": "^1.8.0",
    "express": "^4.9.0",
    "grunt": "^0.4.5",
    "grunt-contrib-jshint": "^0.10.0",
    "grunt-mocha-cov": "^0.3.0",
    "grunt-mocha-test": "^0.11.0",
    "grunt-travis-matrix": "0.0.3",
    "indeed": "^1.0.6",
    "jshint-stylish": "^0.4.0",
    "mocha": "git://github.com/tandrewnichols/mocha.git#suppress-stack",
    "mocha-given": "git://github.com/tandrewnichols/mocha-given.git",
    "mocha-lcov-reporter": "0.0.1",
    "proxyquire": "^1.0.1",
    "sinon": "^1.10.3",
    "supertest": "^0.13.0",
    "task-master": "^2.0.1"
  },
  "config": {
    "blanket": {
      "pattern": [
        "expressive/lib"
      ]
    }
  },
  "dependencies": {
    "lodash": "^2.4.1"
  },
  "gitHead": "97ae044a34346784e5208f37cd6fadbf69bbdf98",
  "_id": "expressive@0.0.1",
  "_shasum": "2cd79ecc9df51cee9aa94e91b8901fdb5ce05e55",
  "_from": "expressive@",
  "_npmVersion": "1.4.14",
  "_npmUser": {
    "name": "tandrewnichols",
    "email": "tandrewnichols@gmail.com"
  },
  "maintainers": [
    {
      "name": "tandrewnichols",
      "email": "tandrewnichols@gmail.com"
    }
  ],
  "dist": {
    "shasum": "2cd79ecc9df51cee9aa94e91b8901fdb5ce05e55",
    "tarball": "http://registry.npmjs.org/expressive/-/expressive-0.0.1.tgz"
  },
  "directories": {},
  "_resolved": "https://registry.npmjs.org/expressive/-/expressive-0.0.1.tgz",
  "readme": "[![Build Status](https://travis-ci.org/mantacode/expressive.png)](https://travis-ci.org/mantacode/expressive) [![downloads](http://img.shields.io/npm/dm/expressive.svg)](https://npmjs.org/package/expressive) [![npm](http://img.shields.io/npm/v/expressive.svg)](https://npmjs.org/package/expressive) [![Code Climate](https://codeclimate.com/github/mantacode/expressive/badges/gpa.svg)](https://codeclimate.com/github/mantacode/expressive) [![Test Coverage](https://codeclimate.com/github/mantacode/expressive/badges/coverage.svg)](https://codeclimate.com/github/mantacode/expressive) [![dependencies](https://david-dm.org/mantacode/expressive.png)](https://david-dm.org/mantacode/expressive)\n\n[![NPM info](https://nodei.co/npm/expressive.png?downloads=true)](https://nodei.co/npm/expressive.png?downloads=true)\n\n# Expressive\n\n## Installation\n\n`npm install --save expressive`\n\n## Usage\n\n```javascript\nvar expressive = require('expressive');\nvar express = require('express');\nvar app = express();\nexpressive(app);\n\napp.use('/normal-route', function(req, res, next) {\n  next();\n});\n\napp.development.get('/dev-only-route', function(req, res, next) {\n  next();\n});\n```\n\nWhen you call `expressive` and pass in an express app, it will add environment specific hooks that you can use for specific environments only. By default, it will use `['development']` as the environment list, but you can pass an array of environments as a second argument (or a single string if you only setting up one environment), or an options object (outlined below).\n\nThis is similar to wrapping `app` calls in checks against the environment, but I've found that this method makes an app easier to read because all the route definitions are parallel.\n\n### With an array\n\n```javascript\nexpressive(app, ['development', 'test']);\n```\n\n### With a string\n\n```javascript\nexpressive(app, 'development');\n```\n\n### With Options\n\nYou can specify the following options to change the default behavior:\n\n#### Envs\n\nThe aforementioned list of environments\n\n```javascript\n// \"envs\" can also be a string here\nexpressive(app, { envs: ['development', 'test'] });\n```\n\n#### Env\n\nThe current environment. Defaults to `process.env.NODE_ENV`.\n\n```javascript\nexpressive(app, { env: nconf.get('NODE_ENV') });\n```\n\nAdditionally, you can pass this env as a third parameter, which can help keep the syntax short.\n\n```javascript\nexpressive(app, 'development', nconf.get('NODE_ENV'));\n```\n\n#### Alias\n\nIf `app.development.use` seems long, you can provide environment aliases to shorten it.\n\n```javascript\nexpressive(app, { alias: { development: 'dev' } });\n```\n\nThen you can just use\n\n```javascript\napp.dev.use(/*args*/);\n```\n",
  "readmeFilename": "README.md"
}

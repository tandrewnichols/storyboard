{
  "name": "grunt-neo4j",
  "version": "0.0.1",
  "description": "Manage the neo4j binary via grunt",
  "main": "tasks/neo4j.js",
  "scripts": {
    "test": "grunt"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/tandrewnichols/grunt-neo4j.git"
  },
  "keywords": [
    "grunt",
    "gruntplugin",
    "neo4j",
    "graph",
    "database"
  ],
  "author": {
    "name": "Andrew Nichols",
    "email": "tandrewnichols@gmail.com",
    "url": "http://www.tandrewnichols.me"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/tandrewnichols/grunt-neo4j/issues"
  },
  "homepage": "https://github.com/tandrewnichols/grunt-neo4j",
  "dependencies": {
    "simple-cli": "^0.1.1"
  },
  "devDependencies": {
    "coffee-script": "^1.8.0",
    "grunt": "^0.4.5",
    "grunt-contrib-jshint": "^0.10.0",
    "grunt-mocha-cov": "^0.3.0",
    "grunt-mocha-test": "^0.12.4",
    "grunt-travis-matrix": "0.0.4",
    "indeed": "^1.0.6",
    "jshint-stylish": "^1.0.0",
    "mocha": "^2.1.0",
    "mocha-given": "^0.1.3",
    "mocha-lcov-reporter": "0.0.1",
    "sinon": "^1.12.2"
  },
  "config": {
    "blanket": {
      "pattern": [
        "grunt-neo4j/tasks"
      ]
    }
  },
  "readme": "[![Build Status](https://travis-ci.org/tandrewnichols/grunt-neo4j.png)](https://travis-ci.org/tandrewnichols/grunt-neo4j) [![downloads](http://img.shields.io/npm/dm/grunt-neo4j.svg)](https://npmjs.org/package/grunt-neo4j) [![npm](http://img.shields.io/npm/v/grunt-neo4j.svg)](https://npmjs.org/package/grunt-neo4j) [![Code Climate](https://codeclimate.com/github/tandrewnichols/grunt-neo4j/badges/gpa.svg)](https://codeclimate.com/github/tandrewnichols/grunt-neo4j) [![Test Coverage](https://codeclimate.com/github/tandrewnichols/grunt-neo4j/badges/coverage.svg)](https://codeclimate.com/github/tandrewnichols/grunt-neo4j) [![dependencies](https://david-dm.org/tandrewnichols/grunt-neo4j.png)](https://david-dm.org/tandrewnichols/grunt-neo4j)\n\n[![NPM info](https://nodei.co/npm/grunt-neo4j.png?downloads=true)](https://nodei.co/npm/grunt-neo4j.png?downloads=true)\n\n# grunt-neo4j\n\nA simple API for managing the neo4j CLI via grunt\n\n## Getting Started\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```bash\nnpm install grunt-neo4j --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with:\n\n```javascript\ngrunt.loadNpmTasks('grunt-neo4j');\n```\n\nAlternatively, install and use [task-master](https://github.com/tandrewnichols/task-master), and it will handle this for you.\n\n## The \"neo4j\" task\n\nThis task is a simple wrapper around the neo4j command line interface, allowing you to start, stop, restart, etc. a neo4j instance as part of a build process. I wrote this because I would occasionally start my node server and forget to start up the neo4j server, and I'd get really unhelpful error messages like \"Error: ECONNREFUSED\" with no useful stack trace or anything. So I wanted a grunt task that would just start my neo4j server prior to starting my node server. Surprisingly, such a task did not exist yet. And fortunately for me, I previously wrote [simple-cli](https://github.com/tandrewnichols/simple-cli) specifically to make wrapping CLI tools simpler.\n\n### Overview\n\nThe `neo4j` task is a multiTask, where the target is the neo4j command to run. You can configure as many commands as are useful to you either in your `grunt.initConfig` call or, as mentioned above, by using [task-master](https://github.com/tandrewnichols/task-master). I strongly recommend using task-master. It provides a nice separation of concerns with grunt configuration. The worst thing abour grunt is the long, messy Gruntfile configuration.\n\nHere is a sample configuration for this task:\n\n```javascript\ngrunt.initConfig({\n  neo4j: {\n    start: {},\n    stop: {},\n    restart: {},\n    status: {}\n  }\n});\n```\n\nYou can supply options and do a lot of other cool things because of [simple-cli](https://github.com/tandrewnichols/simple-cli), but you probably won't need them for neo4j, since you typically run commands without any flags or arguments.\n",
  "readmeFilename": "README.md",
  "gitHead": "e61d875fbffd876450e1f9408944cc4ff26c1664",
  "_id": "grunt-neo4j@0.0.1",
  "_shasum": "5a7d65581af3037e4073fa92846d3bf27adbc07a",
  "_from": "grunt-neo4j@"
}
